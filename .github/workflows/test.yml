name: "Build Anixpkgs"
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  NIXOS_VERSION: 23.05

jobs:
  generate-docs-dry:
    name: Generate Docs (Dry Run)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: |
        python scripts/generate_docs.py
        num_changes=$(git status --porcelain=v1 2>/dev/null | wc -l)
        if [[ $num_changes -ge 1 ]]; then
          echo "Found changes to $num_changes docs"
        else
          echo "No detected changes to auto-generated docs"
        fi
  lint:
    name: Lint Nix Files
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-${{ env.NIXOS_VERSION }}
    - run: >
        nix-shell -p nixfmt --run "bash scripts/lint.sh check"
  check-flake-lock:
    name: Check Flake Lock Sync
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-${{ env.NIXOS_VERSION }}
    - run: >
        nix flake lock --no-update-lock-file
  envs:
    name: Build Environments
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-${{ env.NIXOS_VERSION }}
    - uses: cachix/cachix-action@v12
      with:
        name: github-public
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: >
        git config --global url."https://github.com/".insteadOf ssh://git@github.com/
    - run: export NIXPKGS_ALLOW_UNFREE=1 && ./scripts/build_envs.sh
  tests:
    name: Misc. Packages
    needs: envs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-${{ env.NIXOS_VERSION }}
    - uses: cachix/cachix-action@v12
      with:
        name: github-public
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: >
        git config --global url."https://github.com/".insteadOf ssh://git@github.com/
    - run: export NIXPKGS_ALLOW_UNFREE=1 && ./scripts/build_misc.sh
  cpp:
    name: C++ Packages
    needs: envs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-${{ env.NIXOS_VERSION }}
    - uses: cachix/cachix-action@v12
      with:
        name: github-public
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: >
        git config --global url."https://github.com/".insteadOf ssh://git@github.com/
    - run: export NIXPKGS_ALLOW_UNFREE=1 && ./scripts/build_cpp.sh
  python:
    name: Python Packages
    needs: cpp
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-${{ env.NIXOS_VERSION }}
    - uses: cachix/cachix-action@v12
      with:
        name: github-public
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: >
        git config --global url."https://github.com/".insteadOf ssh://git@github.com/
    - run: export NIXPKGS_ALLOW_UNFREE=1 && ./scripts/build_python.sh
  regression:
    name: Regression Tests
    needs:
    - tests
    - cpp
    - python
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-${{ env.NIXOS_VERSION }}
    - uses: cachix/cachix-action@v12
      with:
        name: github-public
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: >
        cd test && nix-shell --run "bash test.sh"
